{
  "cSpell.words": ["modu", "swcrc"],
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "eslint.validate": ["typescript", "json"],
  "eslint.format.enable": true,
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.suggest.autoImports": true,
  "typescript.preferences.includePackageJsonAutoImports": "on",
  "prettier.requireConfig": true,
  "files.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/coverage": true,
    "**/.cache": true,
    "**/.nx": true,
    "**/*.tsbuildinfo": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/coverage": true,
    "**/logs": true,
    "**/*.log": true,
    "apps/plugin-host/plugins": true,
    "apps/plugin-registry/storage": true
  },
  "files.associations": {
    "*.env*": "properties",
    "*.manifest.json": "json"
  },
  "emmet.includeLanguages": {
    "typescript": "html"
  },
  "npm.enableRunFromFolder": true,
  "jest.rootPath": "./",
  "jest.jestCommandLine": "npm test",
  "jest.runMode": "on-demand",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "[shellscript]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "terminal.integrated.env.osx": {
    "NODE_ENV": "development"
  },
  "terminal.integrated.env.linux": {
    "NODE_ENV": "development"
  },
  "terminal.integrated.env.windows": {
    "NODE_ENV": "development"
  },
  "nxConsole.generateAiAgentRules": true
}
